services:
  debian_app:
    build:
      context: ./docker
      dockerfile: Dockerfile
    container_name: ${CONTAINER_NAME}
    volumes:
      # copy same for horizon
      - ${LIBRARY_PATH}:/library:ro
      - ${LIBRARY_PATH_2}:/library_2:ro
      - ./src:/app
    working_dir: /app
    depends_on:
      - debian_db
      - debian_redis
      - debian_meilisearch
    restart: ${CONTAINER_RESTART}
    networks:
      - debian

  debian_nginx:
    image: nginx:stable
    container_name: ${CONTAINER_NAME}_nginx
    depends_on:
      - debian_app
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./src:/app:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - debian

  debian_db:
    image: mariadb:11.4
    container_name: ${CONTAINER_NAME}_db
    restart: ${CONTAINER_RESTART}
    volumes:
      - ${DB_DATA}:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - debian

  debian_horizon:
    build: .
    container_name: ${CONTAINER_NAME}_horizon
    command: php artisan horizon
    volumes:
      - ${LIBRARY_PATH}:/library:ro
      - ${LIBRARY_PATH_2}:/library_2:ro
      - ./src:/app
    working_dir: /app
    networks:
      - debian
    depends_on:
      - debian_redis

  debian_redis:
    image: redis:7
    container_name: ${CONTAINER_NAME}_redis
    restart: ${CONTAINER_RESTART}
    networks:
      - debian

  debian_meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: ${CONTAINER_NAME}_meilisearch
    restart: ${CONTAINER_RESTART}
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
    volumes:
      - ${MEILISEARCH_DATA}:/meili_data
    networks:
      - debian

networks:
  debian:
    driver: bridge
    name: ${CONTAINER_NETWORK}
